import debug from 'debug';
import { Event } from 'atvik';
import { ServicePublisher } from './service-publisher';
/**
 * Abstract base class to simplify implementation of publishers.
 */
export declare abstract class AbstractServicePublisher implements ServicePublisher {
    /**
     * Debugger that can be used to output debug messages for the publisher.
     */
    protected readonly debug: debug.Debugger;
    /**
     * Event used to emit errors for this publisher.
     */
    protected readonly errorEvent: Event<this, [Error]>;
    constructor(type: string);
    readonly onError: import("atvik").Subscribable<this, [Error]>;
    /**
     * Log and emit an error for this discovery.
     *
     * @param error
     */
    protected logAndEmitError(error: Error, message?: string): void;
    /**
     * Destroy this instance.
     */
    abstract destroy(): Promise<void>;
}
//# sourceMappingURL=abstract-service-publisher.d.ts.map