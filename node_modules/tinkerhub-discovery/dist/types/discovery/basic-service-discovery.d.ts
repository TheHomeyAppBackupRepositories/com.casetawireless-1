import { AbstractServiceDiscovery } from './internal';
import { Service } from '../service';
/**
 * Basic discovery intended for extension. This type of discovery provides
 * functions to update, remove and set services available.
 */
export declare abstract class BasicServiceDiscovery<S extends Service> extends AbstractServiceDiscovery<S> {
    private serviceMap;
    constructor(type: string);
    /**
     * Get all the available services.
     */
    readonly services: S[];
    get(id: string): S | null;
    /**
     * Add or update a service that has been found.
     *
     * @param {object} service
     */
    protected updateService(service: S): S | null;
    /**
     * Remove a service that is no longer available.
     */
    protected removeService(service: S | string): S | null;
    /**
     * Set the services that should be available.
     *
     */
    protected setServices(available: Iterable<S>): void;
}
//# sourceMappingURL=basic-service-discovery.d.ts.map