import { Service } from '../service';
import { ServiceDiscovery } from './service-discovery';
import { LayeredServiceDiscovery } from './internal';
import { ServicePredicate } from '../predicate';
/**
 * Provides filtering of any discovery instance.
 */
export declare class FilteredServiceDiscovery<S extends Service> extends LayeredServiceDiscovery<S, S> {
    private predicate;
    constructor(parent: ServiceDiscovery<S>, predicate: ServicePredicate<S>);
    /**
     * Get all of the available services.
     */
    readonly services: S[];
    get(id: string): S | null;
    protected handleParentServiceAvailable(service: S): void;
    protected handleParentServiceUnavailable(service: S): void;
    protected handleParentServiceUpdate(service: S): void;
}
//# sourceMappingURL=filtered-service-discovery.d.ts.map